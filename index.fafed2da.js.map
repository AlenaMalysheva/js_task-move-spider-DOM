{"mappings":"ACEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAS,SAAS,aAAa,CAAC,WAChC,EAAO,EAAO,aAAa,CAE3B,EAAW,EAAK,qBAAqB,GAE3C,GACE,CAAA,CAAA,EAAE,OAAO,CAAG,EAAS,IAAI,AAAJ,IACrB,CAAA,EAAE,OAAO,CAAG,EAAS,KAAK,AAAL,IACrB,CAAA,EAAE,OAAO,CAAG,EAAS,GAAG,AAAH,IACrB,CAAA,EAAE,OAAO,CAAG,EAAS,MAAM,AAAN,GAKvB,IAAM,EAAc,EAAO,KAAK,CAC1B,EAAe,EAAO,MAAM,CAE5B,EAAa,SACjB,OAAO,gBAAgB,CAAC,GAAM,eAAe,CAC7C,IAGI,EAAY,SAAS,OAAO,gBAAgB,CAAC,GAAM,cAAc,CAAE,IAErE,EAAgB,EAAE,OAAO,CAAG,EAAS,IAAI,CAAG,EAAa,EAAc,EACvE,EAAe,EAAE,OAAO,CAAG,EAAS,GAAG,CAAG,EAAY,EAAe,CAErE,CAAA,EAAgB,EAClB,EAAgB,EACP,EAAgB,EAAc,EAAS,KAAK,CAAG,EAAI,GAC5D,CAAA,EAAgB,EAAS,KAAK,CAAG,EAAc,EAAI,CAD9C,EAIH,EAAe,EACjB,EAAe,EACN,EAAe,EAAe,EAAS,MAAM,CAAG,EAAI,GAC7D,CAAA,EAAe,EAAS,MAAM,CAAG,EAAe,EAAI,CAD/C,EAIP,EAAO,KAAK,CAAC,QAAQ,CAAG,WACxB,EAAO,KAAK,CAAC,IAAI,CAAG,GAAiB,MAAA,CAAd,EAAc,MACrC,EAAO,KAAK,CAAC,GAAG,CAAG,GAAgB,MAAA,CAAb,EAAa,MACrC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"click\", function(e) {\n    var spider = document.querySelector(\".spider\");\n    var wall = spider.parentElement;\n    var wallRect = wall.getBoundingClientRect();\n    if (e.clientX < wallRect.left || e.clientX > wallRect.right || e.clientY < wallRect.top || e.clientY > wallRect.bottom) return;\n    var spiderWidth = spider.width;\n    var spiderHeight = spider.height;\n    var borderLeft = parseInt(window.getComputedStyle(wall).borderLeftWidth, 10);\n    var borderTop = parseInt(window.getComputedStyle(wall).borderTopWidth, 10);\n    var newSpiderLeft = e.clientX - wallRect.left - borderLeft - spiderWidth / 2;\n    var newSpiderTop = e.clientY - wallRect.top - borderTop - spiderHeight / 2;\n    if (newSpiderLeft < 0) newSpiderLeft = 0;\n    else if (newSpiderLeft + spiderWidth > wallRect.width - 2 * borderLeft) newSpiderLeft = wallRect.width - spiderWidth - 2 * borderLeft;\n    if (newSpiderTop < 0) newSpiderTop = 0;\n    else if (newSpiderTop + spiderHeight > wallRect.height - 2 * borderTop) newSpiderTop = wallRect.height - spiderHeight - 2 * borderTop;\n    spider.style.position = \"absolute\";\n    spider.style.left = \"\".concat(newSpiderLeft, \"px\");\n    spider.style.top = \"\".concat(newSpiderTop, \"px\");\n});\n\n//# sourceMappingURL=index.fafed2da.js.map\n","'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const spider = document.querySelector('.spider');\n  const wall = spider.parentElement;\n\n  const wallRect = wall.getBoundingClientRect();\n\n  if (\n    e.clientX < wallRect.left ||\n    e.clientX > wallRect.right ||\n    e.clientY < wallRect.top ||\n    e.clientY > wallRect.bottom\n  ) {\n    return;\n  }\n\n  const spiderWidth = spider.width;\n  const spiderHeight = spider.height;\n\n  const borderLeft = parseInt(\n    window.getComputedStyle(wall).borderLeftWidth,\n    10,\n  );\n\n  const borderTop = parseInt(window.getComputedStyle(wall).borderTopWidth, 10);\n\n  let newSpiderLeft = e.clientX - wallRect.left - borderLeft - spiderWidth / 2;\n  let newSpiderTop = e.clientY - wallRect.top - borderTop - spiderHeight / 2;\n\n  if (newSpiderLeft < 0) {\n    newSpiderLeft = 0;\n  } else if (newSpiderLeft + spiderWidth > wallRect.width - 2 * borderLeft) {\n    newSpiderLeft = wallRect.width - spiderWidth - 2 * borderLeft;\n  }\n\n  if (newSpiderTop < 0) {\n    newSpiderTop = 0;\n  } else if (newSpiderTop + spiderHeight > wallRect.height - 2 * borderTop) {\n    newSpiderTop = wallRect.height - spiderHeight - 2 * borderTop;\n  }\n\n  spider.style.position = 'absolute';\n  spider.style.left = `${newSpiderLeft}px`;\n  spider.style.top = `${newSpiderTop}px`;\n});\n"],"names":["document","addEventListener","e","spider","querySelector","wall","parentElement","wallRect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","spiderWidth","width","spiderHeight","height","borderLeft","parseInt","window","getComputedStyle","borderLeftWidth","borderTop","borderTopWidth","newSpiderLeft","newSpiderTop","style","position","concat"],"version":3,"file":"index.fafed2da.js.map"}